- filtered list of usb devices V

ioreg -p IOUSB -w0 | sed 's/[^o]*o //; s/@.*$//' | grep -v '^Root.*'



-determine if micro controller is detected - 
avrdude -c usbasp -p m328


-flash the hex file 
avrdude -c usbasp -p m328p -P usb -U flash:w:ledBlink.hex


-read the hex file -
avrdude -c usbasp -p m328p -P usb -U flash:r:newFile.hex:r


===================++@=========
/// flash a c program to AVR ? create c program (example 1A.) =====

// turn c to elf file 
avr-gcc -mmcu=atmegaX yourpgm.c -o yourpgm.elf
avr-gcc -mmcu=atmega328p test.c -o test.elf

// turn elf file to hex file 
avr-objcopy -j .text -O ihex yourpgm.elf yourpgm.hex

 avr-objcopy -j .text -O ihex test.elf test.hex

&obviously 2 flash … avrdude -c usbasp -p m328p -P usb -U flash:w:test.hex

avrdude -c usbasp -p m328p -P usb -U flash:w:test.hex
====================++@=====================


CYPHER FUNK —

this turns the .s file into an object file -that works 
after this its the same old story . since u have .o file . 
avr-as -g -mmcu=atmega328p -o blink.o blink.s



this turns the .o file into an .elf file - that works 
avr-ld -o blink.elf blink.o

avr-objcopy -j .text -O ihex blink.elf blink.hex


avrdude -c usbasp -p m328p -P usb -U flash:w:blink.hex




—————+++++++++ ———
/// flash an asm program to AVR ? 

///avra command takes assembly code and makes a bunch of hex and obj files. //


avra blink.S 



avrdude -c usbasp -p m328p -P usb -U flash:w:ledBlink.S.hex







==============——————————————————————————
 If all is set up correctly, avrdude will show a 100% progress bar.
Reading | ################################## | 100%
In this case the programmer proven is fully functional
=============——————————————









othercrap—avr-gcc blink.S -mmcu=atmega328p -o blink.out

avr-gcc -mmcu=atmega328p ledBlink.c -o ledBlink.elf


avr-objcopy -O ihex blinky.out blinky.hex
sudo avrdude -p attiny85 -c usbasp -P usb -e -U flash:w:blinky.hex

avrdude -p m328p -c stk500v1 -b 57600 -P /dev/ttyUSB0 -U flash:w:hello.hex

